#!/bin/sh
set -eu

if [ $# -lt 1 ]; then
  echo >&2 "usage: $0 example.com [subpaths]"
  exit 1
fi

site="$1"
shift

cd `dirname "$0"`/..
mkdir -p cache-data

ip=`dig +short "$site" | head -n 1`

sites_dir=/opt/homebrew/etc/nginx/servers

global_file="$sites_dir"/cash-global.conf
site_file="$sites_dir"/cash-"$site".conf

cat > "$global_file" <<EOF
server_names_hash_bucket_size 64;
server_names_hash_max_size 512;
EOF

cat > "$site_file" <<EOF
# One week.
proxy_cache_path $PWD/cache-data/$site keys_zone=response-$site:10080m;

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name $site;

    ssl_certificate $PWD/certs/$site.crt;
    ssl_certificate_key $PWD/certs/$site.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache shared:tls-$site:1m;

    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    proxy_ssl_server_name on;
    proxy_ssl_name $site;
    proxy_http_version 1.1;
    proxy_set_header Host $site;

    location @passthrough {
        proxy_pass https://$ip;

        add_header Cash-Status PASSTHROUGH;
    }

    location @cache {
        if (\$request_method = OPTIONS) {
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers *;
            add_header Access-Control-Allow-Methods *;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 604800;  # One week.
            add_header Content-Length 0;
            add_header Cash-Status CONSTANT;

            return 204;

            break;
        }

        proxy_pass https://$ip;

        proxy_ignore_headers Cache-Control;
        proxy_ignore_headers Expires;
        proxy_hide_header Cache-Control;
        proxy_hide_header Content-Security-Policy;
        proxy_hide_header Expires;

        add_header Cash-Status \$upstream_cache_status;  # Show HIT or MISS.
        add_header Cash-Date \$upstream_http_date;  # Show date.

        proxy_cache response-$site;
        proxy_cache_valid any 10080m;  # One week.
    }
EOF

if [ $# -gt 0 ]; then
    need_passthrough=yes
    loc="$1"
else
    need_passthrough=no
    loc=/
fi

while [ -n "$loc" ]; do
    cat >> "$site_file" <<EOF

    location $loc {
        try_files /dev/null @cache;
    }
EOF

    if shift && [ $# -gt 0 ]; then
        loc="$1"
    else
        loc=
    fi
done

if [ "$need_passthrough" = 'yes' ]; then
    cat >> "$site_file" <<EOF

    location / {
        try_files /dev/null @passthrough;
    }
EOF
fi

cat >> "$site_file" <<EOF
}
EOF

sudo sh -c \
    "
    cp /etc/hosts /etc/hosts.`date +%s`
    sed -i '' /\ $site\$/d /etc/hosts
    echo 127.0.0.1 $site >> /etc/hosts
    echo ::1 $site >> /etc/hosts
    "
